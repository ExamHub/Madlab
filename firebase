Add Firebase to your Android app

android/build.gradel
classpath 'com.google.gms:google-services:4.3.15'

android/app/build.gradel
Apply plugin : ‘com.google.gms:google-services:4.3.15’

C:\Users\ishik>cd C:\Users\ishik\StudioProjects\hello
C:\Users\ishik\StudioProjects\hello>dart pub global activate flutterfire_cli
C:\Users\ishik\StudioProjects\hello>flutterfire configure --project=kshama-2ce59

project/ pubspec.yml
dependencies:
firebase_database: any
cloud_firestore: any
> pubget
>get dependencies

Firebase console
Build / Firebase database
Create database > start in test mode

Main.dart

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart';
void main() async{
WidgetsFlutterBinding.ensureInitialized();
await Firebase.initializeApp(
options: DefaultFirebaseOptions.currentPlatform,
);
runApp(const MaterialApp(
home: Restoform(),
));
}
class Restoform extends StatefulWidget {
const Restoform({Key? key}) : super(key: key);
@override
State<Restoform> createState() => _RestoformState();
}
class _RestoformState extends State<Restoform> {
final formkey = GlobalKey<FormState>();
late String _name;
late String _email;
late String _phone;
late String _guests;
late String _time;
@override
Widget build(BuildContext context) {
return Scaffold(
appBar: AppBar(
title: Text("Restaurant form"),
centerTitle: true,
),
body: Form(
key: formkey,
child: Column(
children: <Widget>[
TextFormField(
decoration: InputDecoration(
labelText: "Name",
icon: Icon(Icons.person),
hintText: "Enter your name",
),
validator: (value){
if(value!.isEmpty){
return "Please enter your name";
}
},
onSaved: (value){
_name = value!;
},
),
SizedBox(height: 10,),
TextFormField(
decoration: InputDecoration(
labelText: "Email",
icon: Icon(Icons.alternate_email),
hintText: "Enter your email",
),
validator: (value){
if(value!.isEmpty){
return "Please enter your email";
}
},
onSaved: (value){
_email = value!;
},
),
SizedBox(height: 10,),
TextFormField(
decoration: InputDecoration(
labelText: "Phone number",
icon: Icon(Icons.phone),
hintText: "Enter your phone number",
),
validator: (value){
if(value!.isEmpty){
return "Please enter your phone number";
}
else if(!RegExp(r'^[0-9]{10}$').hasMatch(value)){
return "Please enter a valid phone number";
}
},
onSaved: (value){
_phone = value!;
},
),
SizedBox(height: 10,),
TextFormField(
decoration: InputDecoration(
labelText: "Number of guests",
icon: Icon(Icons.people_alt),
hintText: "Enter number of guests",
),
validator: (value){
if(value!.isEmpty){
return "Please enter number of guests";
}
else if(!RegExp(r'^[0-9]$').hasMatch(value)){
return "Please enter a valid number";
}
},
onSaved: (value){
_guests = value!;
},
),
SizedBox(height: 10,),
TextFormField(
decoration: InputDecoration(
labelText: "Time",
icon: Icon(Icons.timer),
hintText: "Enter time of arrival",
),
validator: (value){
if(value!.isEmpty){
return "Please enter a suitable time";
}
else
if(!RegExp(r'[01]?[0-9]|2[0-3]:[0-5][0-9]').hasMatch(value)){
return "Please enter a valid time";
}
},
onSaved: (value){
_time = value!;
},
),
SizedBox(height: 10,),
submitButton(),
],
),
),
);
}
Widget submitButton(){
return ElevatedButton.icon(
onPressed: (){
if(formkey.currentState!.validate()){
ScaffoldMessenger.of(context).showSnackBar(
SnackBar(content: Text("Registration done successfully"))
);
formkey.currentState!.save();
FirebaseFirestore.instance.collection("Registrations").add({
'Name' : _name,
'Email' : _email,
'Phone' : _phone,
'Guests' : _guests,
'Time' : _time,
}).then((value) => print("Submitted
successfully")).catchError((error)=>
print("$error"));
}
},
icon: Icon(Icons.send),
label: Text("Submit"),
);
}
}

cmd:-

npm install -g firebase-tools
firebase login
firebase projects:list
Firebase Console
- Getstarted
- Off {enable google analytics}
- Create project
- Go to Flutter app
- Click on Firebase Cli> copy paste all the cli commands
- Click next on flutter app
- Go to Android App
- Change from project to android>app-src-buildgradle file> copy applicationId
- Go to Android app > Paste the id and register
- Download .json file and paste it android>src
- Add this in dependency in android>buid.gradle file
classpath 'com.google.gms:google-services:4.3.15'
- add this to app> buid.gradle file inside app folder
apply plugin:'com.google.gms:google-services:4.3.15'
Now
- Paste the next two commands in the cmd (change path to the proj folder for the
commands )
- Click next on flutter app
- Click on continue to console
- Add dependency in pubspec.yaml
dependencies:
firebase_database: any
firebase_core: ^2.7.1
cloud_firestore: any
- Click on get dependencies (notififcation)
- Firebase console
- Build / Firebase database
- Create database > start in test mode
